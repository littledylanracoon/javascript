避免延遲的方法 
1. 先在div顯示 timer-1傳入 

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Document</title>
    <style>
     
    </style>
</head>
<body>
    
    <button>press</button>
    <div>剩下5秒</div>
    <script>
      var btn = document.querySelector('button');
      var div = document.querySelector('div');
      btn.addEventListener('click', function(){
        location.href = 'https://www.google.com.tw';
      })
      var timer = 4;
      setInterval(function(){
        if(timer == 0){
          location.href = 'https://www.google.com.tw';
          div.style.display = 'none';
        }
        else{
          div.innerHTML = '剩下' + timer + '秒';
          timer--;
        }
      }, 1000);
    </script>
  
</body>
</html>

2. 封裝函數 先調用一次

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Document</title>
    <style>
     
    </style>
</head>
<body>
    
    <button>press</button>
    <div></div>
    <script>
      var btn = document.querySelector('button');
      var div = document.querySelector('div');
      btn.addEventListener('click', function(){
        location.href = 'https://www.google.com.tw';
      })
      var timer = 5;
      function callback(){
        if(timer == 0){
          location.href = 'https://www.google.com.tw';
          div.style.display = 'none';
        }
        else{
          div.innerHTML = '剩下' + timer + '秒';
          timer--;
        }
      }
      callback();
      setInterval(callback, 1000);
    </script>
  
</body>
</html>
